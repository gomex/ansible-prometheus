# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - kafka_delay_rules.yml

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  # metrics_path defaults to '/metrics'
  # scheme defaults to 'http'.
  - job_name: 'prometheus'
    static_configs:
    - targets: ['prometheus:9090']

  - job_name: 'grafana'
    static_configs:
    - targets: ['grafana:3000']

  - job_name: 'alertmanager'
    static_configs:
    - targets: ['altermanager:9093']

  - job_name: 'cadvisor'
    static_configs:
    - targets: ['cadvisor:8080']

  - job_name: 'node_exporter'
    static_configs:
    #- targets: 
    #    - "node-exporter:9100"
      
{% for target in monitor_targets %}
    - targets: 
        - "{{ target.name }}:9100"
      labels:
        env: "{{ target.env }}"
        role: "{{ target.role }}"
        location: "{{ target.location }}"
{% endfor %}

  - job_name: 'kafka'
    static_configs:
{% for target in monitor_targets %}
{% if target.role == "kafka"  %}
    - targets: 
        - "{{ target.name }}:8081"
      labels:
        env: "{{ target.env }}"
        role: "{{ target.role }}"
        location: "{{ target.location }}"
        cluster: "{{ target.cluster }}"
{% endif %}
{% endfor %}    

  - job_name: "postgres"
    scrape_interval: 15s
    static_configs:
{% for target in monitor_targets %}
{% if target.role == "postgres"  %}
      - targets: 
          - "{{ target.name }}:9187"
        labels:
          env: "{{ target.env }}"
          role: "{{ target.role }}"
          location: "{{ target.location }}"
{% endif %}
{% endfor %}